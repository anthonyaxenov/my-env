# Autogenerated at 22.08.2022 19:06 using ./gen-makefile
.DEFAULT_GOAL := help

#===============================================
#	Scripts listed in ./packs
#===============================================

##composer: [PACK] php + composer
composer: php composer-clean

##flameshot: [TODO] [PACK] qt5 + flameshot from source
flameshot: qt5 flameshot-build

##lamp: [PACK] Apache + php + mariadb
lamp: apache php mariadb

##omz: [PACK] zsh + omz + powerline10k + MesloLGS font
omz: zsh omz-clean omz-fancy
	chsh -s /usr/bin/zsh
	@exec zsh

#===============================================
#	Scripts listed in ./install
#===============================================

##apache: Install apache2 (latest)
apache:
	@./install/apache

##apt: Install bunch of software from apt
apt:
	@./install/apt

##canon-mg2500: Install Canon Pixma MG2500 + ppa
canon-mg2500:
	@./install/canon-mg2500

##chrome: Install google chrome (latest)
chrome:
	@./install/chrome

##composer-clean: Install composer (latest)
composer-clean:
	@./install/composer-clean

##docker: Install docker (latest) + docker-compose (latest) + ppa
docker:
	@./install/docker

##droidcam: Install droidcam v1.8.2
droidcam:
	@./install/droidcam

##droidcam-obs: Install droidcam-obs plugin v1.5.1
droidcam-obs:
	@./install/droidcam-obs

##file-templates-kde: Install file templates (KDE)
file-templates-kde:
	@./install/file-templates-kde

##flameshot-build: [TODO] Build flameshot from src (latest)
flameshot-build:
	@./install/flameshot-build

##git: Install git (latest)
git:
	@./install/git

##golang: Install golang v1.18.3
golang:
	@./install/golang

##grubc: Install grub-customizer (latest) + ppa
grubc:
	@./install/grubc

##kde-appmenu: Install KDE Window AppMenu Applet
kde-appmenu:
	@./install/kde-appmenu

##libreoffice: Install libreoffice
libreoffice:
	@./install/libreoffice

##lite-xl: Install lite-xl v2.0.5 (draft)
lite-xl:
	@./install/lite-xl

##mariadb: Install mariadb (latest) and php-mysql + phpMyAdmin (if php is installed)
mariadb:
	@./install/mariadb

##nodejs: Install nodejs + npm via nvm
nodejs:
	@./install/nodejs

##ntfy: Install ntfy (latest) + ppa
ntfy:
	@./install/ntfy

##omz-clean: Install omz (latest)
omz-clean:
	@./install/omz-clean

##omz-fancy: Install omz fancy (powerline10k + MesloLGS font)
omz-fancy:
	@./install/omz-fancy

##papirus: Install papirus-icon-theme (latest)
papirus:
	@./install/papirus

##pgsql: Install postgresql (latest) and php-pgsql (if php is installed)
pgsql:
	@./install/pgsql

##php: Install php v8.1 + ppa
php:
	@./install/php

##postman: Install postman (latest)
postman:
	@./install/postman

##qt5: Install qt5
qt5:
	@./install/qt5

##rustdesk: Install rustdesk client v1.1.9 (deb)
rustdesk:
	@./install/rustdesk

##snap: Install bunch of software from snap
snap:
	@./install/snap

##syncthing: Install syncthing (latest) + ppa
syncthing:
	@./install/syncthing

##telebit: Install telebit (latest)
telebit:
	@./install/telebit

##ulauncher: Install ulauncher (latest) + ppa
ulauncher:
	@./install/ulauncher

##wine: Install wine (latest) + ppa (focal)
wine:
	@./install/wine

##zint: Install zint (latest)
zint:
	@./install/zint

##zsh: Install vanilla zsh
zsh:
	@./install/zsh


self:
	@./gen-makefile
help: Makefile
	@echo "Ubuntu software installator"
	@echo
	@echo "Usage:"
	@echo "\tmake  help\t - Show this help"
	@echo "\tmake  GOAL\t - Install software"
	@echo "\tmake ^GOAL\t - Upgrade software"
	@echo "\tmake @GOAL\t - Uninstall software"
	@echo
	@echo "You can combine GOALs, e.g. 'make @docker docker' will reinstall docker."
	@echo
	@echo "Available GOALs:"
	@sed -n 's/^##//p' $< | column -ts ':' | sed -e "s/^/\t/"
+%:
	@$(MAKE) $*
^%:
	@./upgrade/$*
@%:
	@./uninstall/$*
