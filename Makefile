# Autogenerated at 25.08.2022 22:32 using ./gen-makefile
.DEFAULT_GOAL := help

#===============================================
#	Scripts listed in ./packs
#===============================================

# [PACK] php + composer
composer: php composer-clean

# [TODO] [PACK] qt5 + flameshot from source
flameshot: qt5 flameshot-build

# [PACK] Apache + php + mariadb
lamp: apache php mariadb

# [PACK] zsh + omz + powerline10k + MesloLGS font
omz: zsh omz-clean omz-fancy
	chsh -s /usr/bin/zsh
	@exec zsh

#===============================================
#	Scripts listed in ./install
#===============================================

# Install apache2 (latest)
apache:
	@./install/apache

# Install bunch of software from apt
apt:
	@./install/apt

# Install Canon Pixma MG2500 + ppa
canon-mg2500:
	@./install/canon-mg2500

# Install google chrome (latest)
chrome:
	@./install/chrome

# Install composer (latest)
composer-clean:
	@./install/composer-clean

# Install docker (latest) + docker-compose (latest) + ppa
docker:
	@./install/docker

# Install droidcam v1.8.2
droidcam:
	@./install/droidcam

# Install droidcam-obs plugin v1.5.1
droidcam-obs:
	@./install/droidcam-obs

# Install file templates (KDE)
file-templates-kde:
	@./install/file-templates-kde

# [TODO] Build flameshot from src (latest)
flameshot-build:
	@./install/flameshot-build

# Install git (latest)
git:
	@./install/git

# Install golang v1.18.3
golang:
	@./install/golang

# Install grub-customizer (latest) + ppa
grubc:
	@./install/grubc

# Install KDE Window AppMenu Applet
kde-appmenu:
	@./install/kde-appmenu

# Install libreoffice
libreoffice:
	@./install/libreoffice

# Install lite-xl v2.0.5 (draft)
lite-xl:
	@./install/lite-xl

# Install mariadb (latest) and php-mysql + phpMyAdmin (if php is installed)
mariadb:
	@./install/mariadb

# Install nodejs + npm via nvm
nodejs:
	@./install/nodejs

# Install ntfy (latest) + ppa
ntfy:
	@./install/ntfy

# Install omz (latest)
omz-clean:
	@./install/omz-clean

# Install omz fancy (powerline10k + MesloLGS font)
omz-fancy:
	@./install/omz-fancy

# Install papirus-icon-theme (latest)
papirus:
	@./install/papirus

# Install postgresql (latest) and php-pgsql (if php is installed)
pgsql:
	@./install/pgsql

# Install php v8.1 + ppa
php:
	@./install/php

# Install postman (latest)
postman:
	@./install/postman

# Install qt5
qt5:
	@./install/qt5

# Install rustdesk client v1.1.9 (deb)
rustdesk:
	@./install/rustdesk

# Install bunch of software from snap
snap:
	@./install/snap

# Install syncthing (latest) + ppa
syncthing:
	@./install/syncthing

# Install telebit (latest)
telebit:
	@./install/telebit

# Install ulauncher (latest) + ppa
ulauncher:
	@./install/ulauncher

# Install wine (latest) + ppa (focal)
wine:
	@./install/wine

# Install zint (latest)
zint:
	@./install/zint

# Install vanilla zsh
zsh:
	@./install/zsh


self:
	@./gen-makefile

help: Makefile
	@echo "Ubuntu software installator"
	@echo
	@echo "Usage:"
	@echo "\tmake help\t - Show this help"
	@echo "\tmake self\t - Regenerate Makefile (alias of ./gen-makefile)"
	@echo "\tmake GOAL\t - Install software"
	@echo "\tmake ^GOAL\t - Upgrade software"
	@echo "\tmake @GOAL\t - Uninstall software"
	@echo
	@echo "You can combine GOALs, e.g. 'make @docker docker' will reinstall docker."
	@echo
	@echo "Available GOALs:"
	@sed -n '/^#/{N;s/# *\(.*\)\n\([^# .].*:\)/\t\2\1/p}' $< | column -ts ':'
+%:
	@$(MAKE) $*
^%:
	@./upgrade/$*
@%:
	@./uninstall/$*
